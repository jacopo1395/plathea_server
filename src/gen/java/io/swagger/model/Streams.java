/*
 * Plathea
 * Rest APIs Plathea
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import javax.validation.constraints.*;

/**
 * Streams
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2018-09-26T08:59:27.842Z")
public class Streams   {
  @JsonProperty("colorRight")
  private Integer colorRight = null;

  @JsonProperty("colorLeft")
  private Integer colorLeft = null;

  @JsonProperty("background")
  private Integer background = null;

  @JsonProperty("disparity")
  private Integer disparity = null;

  @JsonProperty("edgeIntensity")
  private Integer edgeIntensity = null;

  public Streams colorRight(Integer colorRight) {
    this.colorRight = colorRight;
    return this;
  }

  /**
   * Get colorRight
   * @return colorRight
   **/
  @JsonProperty("colorRight")
  @ApiModelProperty(value = "")
  public Integer getColorRight() {
    return colorRight;
  }

  public void setColorRight(Integer colorRight) {
    this.colorRight = colorRight;
  }

  public Streams colorLeft(Integer colorLeft) {
    this.colorLeft = colorLeft;
    return this;
  }

  /**
   * Get colorLeft
   * @return colorLeft
   **/
  @JsonProperty("colorLeft")
  @ApiModelProperty(value = "")
  public Integer getColorLeft() {
    return colorLeft;
  }

  public void setColorLeft(Integer colorLeft) {
    this.colorLeft = colorLeft;
  }

  public Streams background(Integer background) {
    this.background = background;
    return this;
  }

  /**
   * Get background
   * @return background
   **/
  @JsonProperty("background")
  @ApiModelProperty(value = "")
  public Integer getBackground() {
    return background;
  }

  public void setBackground(Integer background) {
    this.background = background;
  }

  public Streams disparity(Integer disparity) {
    this.disparity = disparity;
    return this;
  }

  /**
   * Get disparity
   * @return disparity
   **/
  @JsonProperty("disparity")
  @ApiModelProperty(value = "")
  public Integer getDisparity() {
    return disparity;
  }

  public void setDisparity(Integer disparity) {
    this.disparity = disparity;
  }

  public Streams edgeIntensity(Integer edgeIntensity) {
    this.edgeIntensity = edgeIntensity;
    return this;
  }

  /**
   * Get edgeIntensity
   * @return edgeIntensity
   **/
  @JsonProperty("edgeIntensity")
  @ApiModelProperty(value = "")
  public Integer getEdgeIntensity() {
    return edgeIntensity;
  }

  public void setEdgeIntensity(Integer edgeIntensity) {
    this.edgeIntensity = edgeIntensity;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Streams streams = (Streams) o;
    return Objects.equals(this.colorRight, streams.colorRight) &&
        Objects.equals(this.colorLeft, streams.colorLeft) &&
        Objects.equals(this.background, streams.background) &&
        Objects.equals(this.disparity, streams.disparity) &&
        Objects.equals(this.edgeIntensity, streams.edgeIntensity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(colorRight, colorLeft, background, disparity, edgeIntensity);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Streams {\n");
    
    sb.append("    colorRight: ").append(toIndentedString(colorRight)).append("\n");
    sb.append("    colorLeft: ").append(toIndentedString(colorLeft)).append("\n");
    sb.append("    background: ").append(toIndentedString(background)).append("\n");
    sb.append("    disparity: ").append(toIndentedString(disparity)).append("\n");
    sb.append("    edgeIntensity: ").append(toIndentedString(edgeIntensity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

